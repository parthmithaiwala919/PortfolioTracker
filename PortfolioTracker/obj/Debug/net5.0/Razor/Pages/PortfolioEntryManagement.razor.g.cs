#pragma checksum "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\Pages\PortfolioEntryManagement.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e4a1bdd5ea1593a67849fd6c585fdd5500ab0c61"
// <auto-generated/>
#pragma warning disable 1591
namespace PortfolioTracker.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\_Imports.razor"
using PortfolioTracker;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\_Imports.razor"
using PortfolioTracker.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\_Imports.razor"
using MatBlazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\Pages\PortfolioEntryManagement.razor"
using Model;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\Pages\PortfolioEntryManagement.razor"
using Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\Pages\PortfolioEntryManagement.razor"
using Utils;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\Pages\PortfolioEntryManagement.razor"
using System.ComponentModel.DataAnnotations;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\Pages\PortfolioEntryManagement.razor"
using PortfolioTrackerStatsSource;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\Pages\PortfolioEntryManagement.razor"
using PortfolioTrackerStatsSource.model;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\Pages\PortfolioEntryManagement.razor"
using Repository;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/newportfolioentry/{portfolioId:int}")]
    public partial class PortfolioEntryManagement : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.OpenElement(0, "div");
            __builder.AddAttribute(1, "class", "mat-layout-grid");
            __builder.AddAttribute(2, "style", "background-color: #CAE4DB;");
            __builder.OpenElement(3, "div");
            __builder.AddAttribute(4, "class", "mat-layout-grid-inner");
            __builder.AddMarkupContent(5, "<div class=\"mat-layout-grid-cell-span-2\"></div>\n        ");
            __builder.OpenElement(6, "div");
            __builder.AddAttribute(7, "class", "mat-layout-grid-cell-span-8");
            __builder.OpenComponent<MatBlazor.MatH5>(8);
            __builder.AddAttribute(9, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder2) => {
                __builder2.OpenComponent<MatBlazor.MatButton>(10);
                __builder2.AddAttribute(11, "Outlined", global::Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 20 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\Pages\PortfolioEntryManagement.razor"
                                        true

#line default
#line hidden
#nullable disable
                ));
                __builder2.AddAttribute(12, "Icon", "keyboard_arrow_left");
                __builder2.AddAttribute(13, "Style", "margin-right: 1rem;background-color:white");
                __builder2.AddAttribute(14, "OnClick", global::Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 20 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\Pages\PortfolioEntryManagement.razor"
                                                                                                                                    () => { NavigationManager.NavigateTo($"/portfolios/{_portfolio.Id}"); }

#line default
#line hidden
#nullable disable
                )));
                __builder2.AddAttribute(15, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder3) => {
                    __builder3.AddContent(16, "Back to portfolio");
                }
                ));
                __builder2.CloseComponent();
                __builder2.AddContent(17, "Manage entries of ");
                __builder2.OpenElement(18, "b");
#nullable restore
#line 20 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\Pages\PortfolioEntryManagement.razor"
__builder2.AddContent(19, _portfolio.Name);

#line default
#line hidden
#nullable disable
                __builder2.CloseElement();
            }
            ));
            __builder.CloseComponent();
            __builder.AddMarkupContent(20, "\n            ");
            __Blazor.PortfolioTracker.Pages.PortfolioEntryManagement.TypeInference.CreateMatTextField_0(__builder, 21, 22, "Filter by symbol", 23, "margin-bottom: 2rem;background-color:white", 24, "filter_list", 25, 
#nullable restore
#line 21 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\Pages\PortfolioEntryManagement.razor"
                                                                                                                                    true

#line default
#line hidden
#nullable disable
            , 26, 
#nullable restore
#line 21 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\Pages\PortfolioEntryManagement.razor"
                                                                                                                                                        CryptocurrencyFilter

#line default
#line hidden
#nullable disable
            , 27, Microsoft.AspNetCore.Components.EventCallback.Factory.Create(this, global::Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => CryptocurrencyFilter = __value, CryptocurrencyFilter)), 28, () => CryptocurrencyFilter);
#nullable restore
#line 22 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\Pages\PortfolioEntryManagement.razor"
             if (_availableCryptocurrenciesWithUsage == null)
            {

#line default
#line hidden
#nullable disable
            __builder.OpenComponent<MatBlazor.MatProgressBar>(29);
            __builder.AddAttribute(30, "Indeterminate", global::Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 24 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\Pages\PortfolioEntryManagement.razor"
                                               true

#line default
#line hidden
#nullable disable
            ));
            __builder.CloseComponent();
#nullable restore
#line 25 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\Pages\PortfolioEntryManagement.razor"
            }
            else
            {
                

#line default
#line hidden
#nullable disable
#nullable restore
#line 28 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\Pages\PortfolioEntryManagement.razor"
                 if (_availableCryptocurrenciesWithUsage.Count > 0)
                {

#line default
#line hidden
#nullable disable
            __Blazor.PortfolioTracker.Pages.PortfolioEntryManagement.TypeInference.CreateMatTable_1(__builder, 31, 32, 
#nullable restore
#line 30 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\Pages\PortfolioEntryManagement.razor"
                                      _availableCryptocurrenciesWithUsage

#line default
#line hidden
#nullable disable
            , 33, 
#nullable restore
#line 30 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\Pages\PortfolioEntryManagement.razor"
                                                                                    true

#line default
#line hidden
#nullable disable
            , 34, "tester", 35, 
#nullable restore
#line 30 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\Pages\PortfolioEntryManagement.razor"
                                                                                                                      10

#line default
#line hidden
#nullable disable
            , 36, 
#nullable restore
#line 31 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\Pages\PortfolioEntryManagement.razor"
                                                    150

#line default
#line hidden
#nullable disable
            , 37, "mat-elevation-z5", 38, "background-color: white;", 39, (__builder2) => {
                __builder2.AddMarkupContent(40, "<th>Symbol</th>\n                            ");
                __builder2.AddMarkupContent(41, "<th>Name</th>\n                            <th></th>");
            }
            , 42, (context) => (__builder2) => {
                __builder2.OpenElement(43, "td");
#nullable restore
#line 39 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\Pages\PortfolioEntryManagement.razor"
__builder2.AddContent(44, context.Item1.Symbol);

#line default
#line hidden
#nullable disable
                __builder2.CloseElement();
                __builder2.AddMarkupContent(45, "\n                            ");
                __builder2.OpenElement(46, "td");
                __builder2.OpenElement(47, "div");
                __builder2.AddAttribute(48, "style", "min-width: 12em");
#nullable restore
#line 41 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\Pages\PortfolioEntryManagement.razor"
__builder2.AddContent(49, context.Item1.Name);

#line default
#line hidden
#nullable disable
                __builder2.CloseElement();
                __builder2.CloseElement();
#nullable restore
#line 43 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\Pages\PortfolioEntryManagement.razor"
                             if (context.Item2)
                            {

#line default
#line hidden
#nullable disable
                __builder2.OpenElement(50, "td");
                __builder2.OpenComponent<MatBlazor.MatIconButton>(51);
                __builder2.AddAttribute(52, "Icon", "add");
                __builder2.AddAttribute(53, "Alignment", true);
                __builder2.AddAttribute(54, "OnClick", global::Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 46 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\Pages\PortfolioEntryManagement.razor"
                                                                                 () => { OnAddCurrencyClicked(context.Item1); }

#line default
#line hidden
#nullable disable
                )));
                __builder2.AddAttribute(55, "Style", "float: right");
                __builder2.CloseComponent();
                __builder2.CloseElement();
#nullable restore
#line 48 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\Pages\PortfolioEntryManagement.razor"
                            }
                            else
                            {

#line default
#line hidden
#nullable disable
                __builder2.OpenElement(56, "td");
                __builder2.OpenComponent<MatBlazor.MatIconButton>(57);
                __builder2.AddAttribute(58, "Icon", "delete");
                __builder2.AddAttribute(59, "Alignment", true);
                __builder2.AddAttribute(60, "OnClick", global::Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 52 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\Pages\PortfolioEntryManagement.razor"
                                                                                    () => { OnDeleteCurrencyClicked(context.Item1); }

#line default
#line hidden
#nullable disable
                )));
                __builder2.AddAttribute(61, "Style", "float: right");
                __builder2.CloseComponent();
                __builder2.CloseElement();
#nullable restore
#line 54 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\Pages\PortfolioEntryManagement.razor"
                            }

#line default
#line hidden
#nullable disable
            }
            );
#nullable restore
#line 57 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\Pages\PortfolioEntryManagement.razor"
                }
                else
                {

#line default
#line hidden
#nullable disable
            __builder.OpenComponent<MatBlazor.MatH6>(62);
            __builder.AddAttribute(63, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder2) => {
                __builder2.AddContent(64, "No cryptocurrencies match the symbol \"");
#nullable restore
#line 60 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\Pages\PortfolioEntryManagement.razor"
__builder2.AddContent(65, CryptocurrencyFilter);

#line default
#line hidden
#nullable disable
                __builder2.AddContent(66, "\"");
            }
            ));
            __builder.CloseComponent();
#nullable restore
#line 61 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\Pages\PortfolioEntryManagement.razor"
                }

#line default
#line hidden
#nullable disable
#nullable restore
#line 61 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\Pages\PortfolioEntryManagement.razor"
                 
            }

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
            __builder.AddMarkupContent(67, "\n        <div class=\"mat-layout-grid-cell-span-2\"></div>");
            __builder.CloseElement();
            __builder.CloseElement();
        }
        #pragma warning restore 1998
#nullable restore
#line 70 "D:\Ravi\New Changes\PortfolioTracker\PortfolioTracker\Pages\PortfolioEntryManagement.razor"
 
    public string CryptocurrencyFilter
    {
        get => _cryptocurrencyFilter;
        set
        {
            _cryptocurrencyFilter = value;
            // when setting the cryptocurrency symbol filter, do filter the list of available cryptos
            FilterCurrenciesBySymbol(value);
            this.StateHasChanged();
        }
    }

    private void FilterCurrenciesBySymbol(string value)
    {
        // filter by symbol
        _filteredCryptocurrencies = _availableCryptocurrencies.FindAll(c => c.Symbol.Contains(value));
        UpdateAvailableCryptocurrencies(_filteredCryptocurrencies);
    }

    private string _cryptocurrencyFilter;

    [Parameter]
    public int PortfolioId { get; set; }

    // the portfolio whose entries are being managed
    private Portfolio _portfolio;
    
    // existing entries of the portfolio 
    private List<PortfolioEntry> _portfolioEntries;

    // list of available cryptocurrencies
    private List<Cryptocurrency> _availableCryptocurrencies;
    
    // list of filtered cryptocurrencies
    private List<Cryptocurrency> _filteredCryptocurrencies;
    
    // cryptocurrencies mapped to a flag indicating whether it is present in the portfolio or not
    private List<Tuple<Cryptocurrency, bool>> _availableCryptocurrenciesWithUsage;

    protected override void OnInitialized()
    {
        // load the portfolio using the specified ID
        _portfolio = PortfolioService.GetPortfolio(PortfolioId);
        
        if (_portfolio == null)
        {
            NavigationManager.NavigateTo("/notfound");
            return;
        }
        
        // load all entries of the portfolio
        _portfolioEntries = PortfolioEntryService.GetPortfolioEntries(PortfolioId);
    }

    protected override async Task OnInitializedAsync()
    {
        // find all available cryptocurrencies
        _availableCryptocurrencies = (await PortfolioTrackerStatsSource.GetAvailableCryptocurrencies())
            // workaround till Coingecko removes binance-peg entries
            .Where(c => !c.Id.Contains("binance-peg")).ToList();
        _filteredCryptocurrencies = _availableCryptocurrencies;
        UpdateAvailableCryptocurrencies(_availableCryptocurrencies);
    }

    private void UpdateAvailableCryptocurrencies(List<Cryptocurrency> availableCryptocurrencies)
    {
        var entriesSymbols = _portfolioEntries.Select(e => e.Symbol.ToLower());
        // map available cryptocurrencies to a flag indicating whether they are used in the given portfolio
        // order by the flag and then by symbol length
        _availableCryptocurrenciesWithUsage = availableCryptocurrencies.Select(
            c => new Tuple<Cryptocurrency, bool>(c, !entriesSymbols.Contains(c.Symbol.ToLower()))
            ).OrderBy(c => c.Item2).ThenBy(c => c.Item1.Symbol.Length).ToList();
    }

    private void OnAddCurrencyClicked(Cryptocurrency cryptocurrency)
    {
        // create a new portfolio entry
        var entry = PortfolioEntryService.CreatePortfolioEntry(cryptocurrency.Symbol, PortfolioId);
        _portfolioEntries.Add(entry);
        
        // update the UI
        UpdateAvailableCryptocurrencies(_filteredCryptocurrencies);
        StateHasChanged();
        
        // notify the user
        Toaster.Add($"{cryptocurrency.Symbol.ToUpper()} entry successfully added to {_portfolio.Name}.", MatToastType.Success, "", "");
    }

    private async void OnDeleteCurrencyClicked(Cryptocurrency cryptocurrency)
    {
        // let user confirm whether he wants to delete the entry
        var result = await MatDialogService.ConfirmAsync($"Do you really wish to delete {cryptocurrency.Symbol.ToUpper()} entry including all of it's market entries?");
        if (result)
        {
            // find the entry
            var entry = _portfolioEntries.Find(entry => entry.Symbol == cryptocurrency.Symbol);
            // delete the entry
            PortfolioEntryService.DeletePortfolioEntry(entry);
            _portfolioEntries.Remove(entry);
            // update the UI
            UpdateAvailableCryptocurrencies(_filteredCryptocurrencies);
            StateHasChanged();
            Toaster.Add($"{cryptocurrency.Symbol.ToUpper()} entry successfully deleted from {_portfolio.Name}.", MatToastType.Success, "", "");
        }
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavigationManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IMatToaster Toaster { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IMatDialogService MatDialogService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IPortfolioTrackerStatsSource PortfolioTrackerStatsSource { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IPortfolioEntryService PortfolioEntryService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IPortfolioService PortfolioService { get; set; }
    }
}
namespace __Blazor.PortfolioTracker.Pages.PortfolioEntryManagement
{
    #line hidden
    internal static class TypeInference
    {
        public static void CreateMatTextField_0<TValue>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.String __arg0, int __seq1, global::System.String __arg1, int __seq2, global::System.String __arg2, int __seq3, global::System.Boolean __arg3, int __seq4, TValue __arg4, int __seq5, global::Microsoft.AspNetCore.Components.EventCallback<TValue> __arg5, int __seq6, global::System.Linq.Expressions.Expression<global::System.Func<TValue>> __arg6)
        {
        __builder.OpenComponent<global::MatBlazor.MatTextField<TValue>>(seq);
        __builder.AddAttribute(__seq0, "Label", __arg0);
        __builder.AddAttribute(__seq1, "Style", __arg1);
        __builder.AddAttribute(__seq2, "Icon", __arg2);
        __builder.AddAttribute(__seq3, "FullWidth", __arg3);
        __builder.AddAttribute(__seq4, "Value", __arg4);
        __builder.AddAttribute(__seq5, "ValueChanged", __arg5);
        __builder.AddAttribute(__seq6, "ValueExpression", __arg6);
        __builder.CloseComponent();
        }
        public static void CreateMatTable_1<TableItem>(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder, int seq, int __seq0, global::System.Collections.Generic.IEnumerable<TableItem> __arg0, int __seq1, global::System.Boolean __arg1, int __seq2, global::System.String __arg2, int __seq3, global::System.Int32 __arg3, int __seq4, global::System.Int32 __arg4, int __seq5, System.Object __arg5, int __seq6, System.Object __arg6, int __seq7, global::Microsoft.AspNetCore.Components.RenderFragment __arg7, int __seq8, global::Microsoft.AspNetCore.Components.RenderFragment<TableItem> __arg8)
        {
        __builder.OpenComponent<global::MatBlazor.MatTable<TableItem>>(seq);
        __builder.AddAttribute(__seq0, "Items", __arg0);
        __builder.AddAttribute(__seq1, "Striped", __arg1);
        __builder.AddAttribute(__seq2, "RowClass", __arg2);
        __builder.AddAttribute(__seq3, "PageSize", __arg3);
        __builder.AddAttribute(__seq4, "DebounceMilliseconds", __arg4);
        __builder.AddAttribute(__seq5, "class", __arg5);
        __builder.AddAttribute(__seq6, "style", __arg6);
        __builder.AddAttribute(__seq7, "MatTableHeader", __arg7);
        __builder.AddAttribute(__seq8, "MatTableRow", __arg8);
        __builder.CloseComponent();
        }
    }
}
#pragma warning restore 1591
